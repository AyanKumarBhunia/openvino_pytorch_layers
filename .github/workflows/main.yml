# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  OPENVINO_VERSION: 2021.3
  VERSION: 0.0.2

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_lnx:
    runs-on: ubuntu-18.04
    container:
      quay.io/pypa/manylinux2014_x86_64

    steps:
    - uses: actions/checkout@v2
  
    - name: Install OpenVINO (libs and headers)
      run: |
        /opt/python/cp36-cp36m/bin/python -m pip install --upgrade pip
        /opt/python/cp36-cp36m/bin/python -m pip install openvino==${{env.OPENVINO_VERSION}}
        git clone -b ${{env.OPENVINO_VERSION}} https://github.com/openvinotoolkit/openvino --depth 1

    - name: Download TBB
      run: |
        cd openvino
        git submodule init
        git submodule update --recursive
        mkdir build && cd build
        cmake .. -DENABLE_VPU=OFF -DENABLE_CLDNN=OFF -DENABLE_MKL_DNN=OFF -DENABLE_GNA=OFF

    - name: Build CPU extensions
      run: |
        cd user_ie_extensions
        mkdir build && cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_CXX_FLAGS="-I../../openvino/inference-engine/include/ -I../../openvino/ngraph/core/include -I../../openvino/inference-engine/temp/tbb/include" \
          -DCMAKE_SHARED_LINKER_FLAGS="-L/opt/python/cp36-cp36m/lib/python3.6/site-packages/openvino/libs" \
          -DNGRAPH_LIBRARIES=ngraph \
          -DInferenceEngine_LIBRARIES=inference_engine \
          -DTBB_IMPORTED_TARGETS=tbb
        make -j$(nproc --all)

    - name: Build wheel
      run: |
        EXT_LIB=user_ie_extensions/build/libuser_cpu_extension.so /opt/python/cp36-cp36m/bin/python setup.py build bdist_wheel
        export LD_LIBRARY_PATH=/opt/python/cp36-cp36m/lib/python3.6/site-packages/openvino/libs:$LD_LIBRARY_PATH
        mv dist/*.whl openvino_extensions-${{env.VERSION}}-py3-none-manylinux2014_x86_64.whl

    - uses: actions/upload-artifact@v2
      with:
        name: "wheel_lnx"
        path: "*.whl"


  test_lnx:
    needs: build_lnx
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get install -y python3-setuptools
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt

    - name: Install Intel OpenVINO
      run: |
        sudo curl -o GPG-PUB-KEY-INTEL-OPENVINO-2021 https://apt.repos.intel.com/openvino/2021/GPG-PUB-KEY-INTEL-OPENVINO-2021
        sudo apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2021
        sudo echo "deb https://apt.repos.intel.com/openvino/2021 all main" | sudo tee - a /etc/apt/sources.list.d/intel-openvino-2021.list
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends intel-openvino-dev-ubuntu18-2021.3.394
        sudo ln -s /opt/intel/openvino_2021 /opt/intel/openvino

    - uses: actions/download-artifact@v2
      with:
        name: wheel_lnx

    # Also, remove "openvino_extensions" folder to avoid import confusion
    - name: Install CPU extensions
      run: |
        rm -r openvino_extensions
        python3 -m pip install *.whl

    - name: (Test Unpool) default parameters
      run: |
        source /opt/intel/openvino/bin/setupvars.sh
        python3 examples/unpool/export_model.py --mode=default
        python3 /opt/intel/openvino/deployment_tools/model_optimizer/mo_onnx.py --input_model model.onnx --extension mo_extensions
        python3 compare.py

    - name: (Test Unpool) Test dynamic shapes
      run: |
        source /opt/intel/openvino/bin/setupvars.sh
        python3 examples/unpool/export_model.py --mode=dynamic_size --shape 5 3 6 9
        python3 /opt/intel/openvino/deployment_tools/model_optimizer/mo_onnx.py --input_model model.onnx --extension mo_extensions
        python3 compare.py

        python3 examples/unpool/export_model.py --mode=dynamic_size --shape 4 3 17 8
        python3 compare.py


    - name: (Test FFT)
      run: |
        source /opt/intel/openvino/bin/setupvars.sh
        for shape in "5 120 2" "4 240 320 2" "3 5 240 320 2"; do
          python3 examples/fft/export_model.py --shape ${shape}
          python3 /opt/intel/openvino/deployment_tools/model_optimizer/mo_onnx.py --input_model model.onnx --extension mo_extensions
          python3 compare.py
        done

        python3 examples/fft/export_model.py --shape 3 7 140 100 2
        python3 compare.py

    - name: (Test GridSample)
      run: |
        source /opt/intel/openvino/bin/setupvars.sh
        python3 examples/grid_sample/export_model.py
        python3 /opt/intel/openvino/deployment_tools/model_optimizer/mo_onnx.py --input_model model.onnx --extension mo_extensions
        python3 compare.py --num_inputs 2


  publish:
    # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [test_lnx]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/download-artifact@v2

      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install twine
          python3 -m twine upload wheel*/*.whl
